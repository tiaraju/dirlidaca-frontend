{"version":3,"sources":["app.ts","environment.ts","main.ts","api/api.ts","home/home.ts","login/login.ts","problem/add-problem.ts","problem/problem-detail.ts","problem/problem.ts","resources/index.ts","/media/hdd/Linux/workspace/dirlidaca-frontend/src/app.html","/media/hdd/Linux/workspace/dirlidaca-frontend/src/resources/css/style.css","/media/hdd/Linux/workspace/dirlidaca-frontend/src/home/home.html","/media/hdd/Linux/workspace/dirlidaca-frontend/src/login/login.html","/media/hdd/Linux/workspace/dirlidaca-frontend/src/problem/add-problem.html","/media/hdd/Linux/workspace/dirlidaca-frontend/src/problem/problem-detail.html","/media/hdd/Linux/workspace/dirlidaca-frontend/src/problem/problem.html"],"names":[],"mappings":"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","file":"app-bundle.js","sourcesContent":["import {Router, RouterConfiguration} from 'aurelia-router';\n\nexport class App {\n    router:Router;\n\n    configureRouter(config:RouterConfiguration, router:Router) {\n        config.title = 'Dirlidaca';\n        config.map([\n            {route: '', moduleId: './home/home', title: \"Home\", name: 'home'},\n            {route: 'login', moduleId: './login/login', title: 'Login'},\n            {route: 'problem', moduleId: './problem/problem', title: \"Problems\", name: 'problem'},\n            {route: 'problem/:id', moduleId: './problem/problem-detail', title: \"Problem\", name: 'problem-detail'},\n            {route: 'problem/new', moduleId: './problem/add-problem', title: \"Problem\", name: 'add-problem'}\n        ]);\n\n        this.router = router;\n    }\n}","export default {\n  debug: true,\n  testing: true\n};\n","import {Aurelia} from 'aurelia-framework'\nimport environment from './environment';\n\n//Configure Bluebird Promises.\n//Note: You may want to use environment-specific configuration.\n(<any>Promise).config({\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia: Aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n  }\n","/**\n * Created by tiaraju on 12/10/16.\n */\nlet problems = [{\"id\": 1, \"name\": \"p1\", \"description\": \"problema 1\"},\n    {\"id\": 2, \"name\": \"p2\", \"description\": \"problema 2\"},\n    {\"id\": 3, \"name\": \"p3\", \"description\": \"problema 3\"},\n];\n\nexport class Api {\n\n    latency = 200;\n\n    getProblems() {\n        return new Promise(resolve => {\n            setTimeout(() => {\n                let results = problems.map(x => {\n                    return {\n                        name: x.name,\n                        description: x.description,\n                        id: x.id\n                    }\n                });\n                resolve(results);\n            }, this.latency);\n        });\n    }\n}","/**\n * Created by tiaraju on 12/10/16.\n */\nexport class Home{\n    title = \"home\";\n\n    constructor(){\n    }\n\n    created(){\n    }\n}","interface User {\n    username: string;\n    password: string;\n}\n\nexport class Login{\n    username:string;\n    password:string;\n\n\n    constructor(){}\n\n    login(){\n        console.log(\"Login\");\n    }\n    get canLogin(){\n        return this.username && this.password;\n    }\n\n}","/**\n * Created by tiaraju on 12/10/16.\n */\n\nexport class AddProblem{\n\n    name:string;\n    description:string;\n    hint:string;\n\n    constructor(){\n\n    }\n\n    created(){\n\n    }\n\n    get canAdd(){\n        return this.name && this.description;\n    }\n}\n","/**\n * Created by tiaraju on 12/10/16.\n */\nimport {inject} from 'aurelia-framework';\nimport {Api} from '../api/api';\n\n@inject(Api)\nexport class ProblemDetail {\n\n    name:string;\n    description:string;\n    routeConfig;\n\n    constructor(private api:Api) {\n        console.log(\"chegou\");\n    }\n\n    activate(params, routeConfig) {\n        this.routeConfig = routeConfig;\n    }\n}\n","/**\n * Created by tiaraju on 12/10/16.\n */\nimport {inject} from 'aurelia-framework';\nimport {Api} from '../api/api';\n\n@inject(Api)\nexport class Problem{\n\n    problems;\n\n    constructor(private api: Api){  }\n\n    created() {\n        this.api.getProblems().then(problems=>this.problems=problems);\n    }\n}\n","import {FrameworkConfiguration} from 'aurelia-framework';\n\nexport function configure(config: FrameworkConfiguration) {\n  //config.globalResources([]);\n}\n",null,null,null,null,null,null,null],"sourceRoot":"../src"}