{"version":3,"sources":["app.ts","environment.ts","main.ts","api/api.ts","home/home.ts","login/login.ts","problem/add-problem.ts","problem/problem-detail.ts","problem/problem.ts","resources/index.ts","/media/hdd/Linux/workspace/dirlidaca-frontend/src/app.html","/media/hdd/Linux/workspace/dirlidaca-frontend/src/home/home.html","/media/hdd/Linux/workspace/dirlidaca-frontend/src/resources/css/style.css","/media/hdd/Linux/workspace/dirlidaca-frontend/src/login/login.html","/media/hdd/Linux/workspace/dirlidaca-frontend/src/problem/add-problem.html","/media/hdd/Linux/workspace/dirlidaca-frontend/src/problem/problem-detail.html","/media/hdd/Linux/workspace/dirlidaca-frontend/src/problem/problem.html"],"names":[],"mappings":"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","file":"app-bundle.js","sourcesContent":["import {Router, RouterConfiguration} from 'aurelia-router';\n\nexport class App {\n    router:Router;\n\n    configureRouter(config:RouterConfiguration, router:Router) {\n        config.title = 'Dirlidaca';\n        config.map([\n            {route: '', moduleId: './home/home', title: \"Home\", name: 'home'},\n            {route: 'login', moduleId: './login/login', title: 'Login'},\n            {route: 'problem', moduleId: './problem/problem', title: \"Problems\", name: 'problem'},\n            {route: 'problem/:id', moduleId: './problem/problem-detail', title: \"Problem\", name: 'problem-detail'},\n            {route: 'problem/new', moduleId: './problem/add-problem', title: \"Problem\", name: 'add-problem'}\n        ]);\n\n        this.router = router;\n    }\n}","export default {\n  debug: true,\n  testing: true\n};\n","import {Aurelia} from 'aurelia-framework'\nimport environment from './environment';\n\n//Configure Bluebird Promises.\n//Note: You may want to use environment-specific configuration.\n(<any>Promise).config({\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia: Aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n  }\n","/**\n * Created by tiaraju on 12/10/16.\n */\nimport {inject} from 'aurelia-framework';\nimport {HttpClient, json} from 'aurelia-fetch-client';\n\n@inject(HttpClient, json)\nexport class Api {\n\n    http:HttpClient;\n    problems = [];\n    statusCode:string;\n\n    constructor(http:HttpClient) {\n        this.http = http;\n    }\n\n    getProblems() {\n        return this.http.fetch(\"http://localhost:8080/problem\");\n    }\n\n    saveProblem(problem) {\n        return this.http.fetch('http://localhost:8080/problem', {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(problem)\n        });\n    }\n\n    getProblem(id) {\n        return this.http.fetch(\"http://localhost:8080/problem/\" + id);\n    }\n\n    updateProblem(problem){\n        return this.http.fetch('http://localhost:8080/problem', {\n            method: 'PUT',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(problem)\n        });\n    }\n}","/**\n * Created by tiaraju on 12/10/16.\n */\nexport class Home{\n    title = \"home\";\n\n    constructor(){\n    }\n\n    created(){\n    }\n}","interface User {\n    username: string;\n    password: string;\n}\n\nexport class Login{\n    username:string;\n    password:string;\n\n\n    constructor(){}\n\n    login(){\n        console.log(\"Login\");\n    }\n    get canLogin(){\n        return this.username && this.password;\n    }\n\n}","/**\n * Created by tiaraju on 12/10/16.\n */\nimport {Api} from '../api/api';\nimport {inject} from 'aurelia-framework';\n\n@inject(Api)\nexport class AddProblem {\n\n    name:string;\n    description:string;\n    hint:string;\n\n    constructor(private api:Api) {\n    }\n\n    created() {\n    }\n\n    get canSave() {\n        return this.name && this.description;\n    }\n\n    addProblem() {\n        let newProblem = {\n            name: this.name,\n            description: this.description,\n            hint: this.hint\n        };\n        this.api.saveProblem(newProblem).then(()=> {\n            alert(\"Problem added\");\n            this.name = \"\";\n            this.description = \"\";\n            this.hint = \"\";\n        });\n    }\n}\n","/**\n * Created by tiaraju on 12/10/16.\n */\nimport {inject} from 'aurelia-framework';\nimport {Api} from '../api/api';\n\n@inject(Api)\nexport class ProblemDetail {\n\n    routeConfig;\n    problem;\n\n    constructor(private api:Api) {\n    }\n\n    get canUpdate() {\n        return this.problem && this.problem.name && this.problem.description;\n    }\n\n    activate(params, routeConfig) {\n        this.routeConfig = routeConfig;\n        this.api.getProblem(params.id).then(response =>response.json())\n            .then(data => {\n                this.problem = data;\n            });\n    }\n\n    updateProblem() {\n        this.api.updateProblem(this.problem).then(response =>response.json())\n            .then(data => {\n                this.problem = data;\n                alert(\"Problem Updated\");\n            });\n    }\n}\n","/**\n * Created by tiaraju on 12/10/16.\n */\nimport {inject} from 'aurelia-framework';\nimport {Api} from '../api/api';\n\n@inject(Api)\nexport class Problem {\n\n    problems;\n\n    constructor(private api:Api) {\n    }\n\n    created() {\n        this.problems = [];\n        this.api.getProblems().then(response =>response.json())\n            .then(data => {\n                this.problems = data;\n            });\n    }\n}\n","import {FrameworkConfiguration} from 'aurelia-framework';\n\nexport function configure(config: FrameworkConfiguration) {\n  //config.globalResources([]);\n}\n",null,null,null,null,null,null,null],"sourceRoot":"../src"}